import gurobipy as gp
from gurobipy import GRB
import numpy as np
import scipy.sparse as sp

try:
    m = gp.Model('nonlinear')
    x0 = m.addVar(lb=-3050, ub=-3010, vtype=GRB.CONTINUOUS, name='x0')
    y0 = m.addVar(lb=-20, ub=20, vtype=GRB.CONTINUOUS, name='y0')
    z0 = m.addVar(lb=110, ub=130, vtype=GRB.CONTINUOUS, name='z0')
    yaw0 = m.addVar(lb=-0.001, ub=0.001, vtype=GRB.CONTINUOUS, name='yaw0')
    pitch0 = m.addVar(lb=-0.05335987755982989, ub=-0.05135987755982989, vtype=GRB.CONTINUOUS, name='pitch0')
    v0 = m.addVar(lb=9.99, ub=10.01, vtype=GRB.CONTINUOUS, name='v0')

    # Decalre Variables for step 0
    x_est0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x_est0')
    y_est0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y_est0')
    z_est0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z_est0')
    yaw_est0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_est0')
    pitch_est0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch_est0')

    cos_yaw_cos_pitch0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw_cos_pitch0')
    sin_yaw_cos_pitch0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw_cos_pitch0')
    sin_yaw0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw0')
    cos_yaw0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw0')
    sin_pitch0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_pitch0')
    cos_pitch0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_pitch0')
    sin_yaw_est0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw_est0')
    cos_yaw_est0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw_est0')
    sin_pitch_est0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_pitch_est0')
    cos_pitch_est0 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_pitch_est0')

    x_err0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x_err0')
    y_err0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y_err0')
    z_err0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z_err0')
    yaw_err0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err0')
    new_v_xy0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_vel_xy0')
    new_v_z0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_vel_z0')
    new_v0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_v0')
    yaw_err_cos0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err_cos0')
    yaw_err_sin0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err_sin0')
    a_input0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='a_input0')
    yaw_input0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_input0')
    pitch_input0 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch_input0')

    x1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x1')
    y1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y1')
    z1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z1')
    yaw1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw1')
    pitch1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch1')
    v1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='v1')

    # Dynamics for step 0
    m.addConstr(x_est0>=x0-23.339123)
    m.addConstr(x_est0<=x0+23.339123)
    m.addConstr(y_est0>=y0-4.873251)
    m.addConstr(y_est0<=y0+4.873251)
    m.addConstr(z_est0>=z0-2.01548)
    m.addConstr(z_est0<=z0+2.01548)
    m.addConstr(yaw_est0>=yaw0-0.001)
    m.addConstr(yaw_est0<=yaw0+0.001)
    m.addConstr(pitch_est0>=pitch0-0.001)
    m.addConstr(pitch_est0<=pitch0+0.001)
    m.addGenConstrSin(yaw0, sin_yaw0)
    m.addGenConstrCos(yaw0, cos_yaw0)
    m.addGenConstrCos(pitch0, cos_pitch0)
    m.addGenConstrSin(pitch0, sin_pitch0)
    m.addGenConstrSin(yaw_est0, sin_yaw_est0)
    m.addGenConstrCos(yaw_est0, cos_yaw_est0)
    m.addGenConstrSin(pitch_est0, sin_pitch_est0)
    m.addGenConstrCos(pitch_est0, cos_pitch_est0)
    m.addConstr(x_err0==cos_yaw_est0*(-3000.0-x_est0)+sin_yaw_est0*(0.0-y_est0))
    m.addConstr(y_err0==-sin_yaw_est0*(-3000.0-x_est0)+cos_yaw_est0*(0.0-y_est0))
    m.addConstr(z_err0==120.0-z_est0)
    m.addConstr(yaw_err0==0.0-yaw_est0)
    m.addGenConstrCos(yaw_err0, yaw_err_cos0)
    m.addGenConstrSin(yaw_err0, yaw_err_sin0)
    m.addConstr(new_v_xy0==10.0*0.9986295347545738*yaw_err_cos0+0.01*x_err0)
    m.addConstr(yaw_input0==yaw_err0+10.0*(0.01*y_err0+0.01*yaw_err_sin0))
    m.addConstr(new_v_z0==10.0*-0.052335956242943835+0.01*z_err0)
    m.addGenConstrNorm(new_v0, [new_v_xy0, new_v_z0], 2)
    m.addConstr(a_input0==0.005*(new_v0-v0))
    m.addConstr(pitch_input0==(-0.05235987755982989-pitch0)+0.005*z_err0)
    m.addConstr(cos_yaw_cos_pitch0==cos_yaw0*cos_pitch0)
    m.addConstr(sin_yaw_cos_pitch0==sin_yaw0*cos_pitch0)
    m.addConstr(x1==x0+0.1*v0*cos_yaw_cos_pitch0)
    m.addConstr(y1==y0+0.1*v0*sin_yaw_cos_pitch0)
    m.addConstr(z1==z0+0.1*v0*sin_pitch0)
    m.addConstr(yaw1==yaw0+0.1*yaw_input0)
    m.addConstr(pitch1==pitch0+0.1*pitch_input0)
    m.addConstr(v1==v0+0.1*a_input0)

    # Decalre Variables for step 1
    x_est1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x_est1')
    y_est1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y_est1')
    z_est1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z_est1')
    yaw_est1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_est1')
    pitch_est1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch_est1')

    cos_yaw_cos_pitch1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw_cos_pitch1')
    sin_yaw_cos_pitch1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw_cos_pitch1')
    sin_yaw1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw1')
    cos_yaw1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw1')
    sin_pitch1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_pitch1')
    cos_pitch1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_pitch1')
    sin_yaw_est1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw_est1')
    cos_yaw_est1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw_est1')
    sin_pitch_est1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_pitch_est1')
    cos_pitch_est1 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_pitch_est1')

    x_err1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x_err1')
    y_err1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y_err1')
    z_err1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z_err1')
    yaw_err1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err1')
    new_v_xy1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_vel_xy1')
    new_v_z1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_vel_z1')
    new_v1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_v1')
    yaw_err_cos1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err_cos1')
    yaw_err_sin1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err_sin1')
    a_input1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='a_input1')
    yaw_input1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_input1')
    pitch_input1 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch_input1')

    x2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x2')
    y2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y2')
    z2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z2')
    yaw2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw2')
    pitch2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch2')
    v2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='v2')

    # Dynamics for step 1
    m.addConstr(x_est1>=x1-23.339123)
    m.addConstr(x_est1<=x1+23.339123)
    m.addConstr(y_est1>=y1-4.873251)
    m.addConstr(y_est1<=y1+4.873251)
    m.addConstr(z_est1>=z1-2.01548)
    m.addConstr(z_est1<=z1+2.01548)
    m.addConstr(yaw_est1>=yaw1-0.001)
    m.addConstr(yaw_est1<=yaw1+0.001)
    m.addConstr(pitch_est1>=pitch1-0.001)
    m.addConstr(pitch_est1<=pitch1+0.001)
    m.addGenConstrSin(yaw1, sin_yaw1)
    m.addGenConstrCos(yaw1, cos_yaw1)
    m.addGenConstrCos(pitch1, cos_pitch1)
    m.addGenConstrSin(pitch1, sin_pitch1)
    m.addGenConstrSin(yaw_est1, sin_yaw_est1)
    m.addGenConstrCos(yaw_est1, cos_yaw_est1)
    m.addGenConstrSin(pitch_est1, sin_pitch_est1)
    m.addGenConstrCos(pitch_est1, cos_pitch_est1)
    m.addConstr(x_err1==cos_yaw_est1*(-2999.0-x_est1)+sin_yaw_est1*(0.0-y_est1))
    m.addConstr(y_err1==-sin_yaw_est1*(-2999.0-x_est1)+cos_yaw_est1*(0.0-y_est1))
    m.addConstr(z_err1==119.94759222071696-z_est1)
    m.addConstr(yaw_err1==0.0-yaw_est1)
    m.addGenConstrCos(yaw_err1, yaw_err_cos1)
    m.addGenConstrSin(yaw_err1, yaw_err_sin1)
    m.addConstr(new_v_xy1==10.0*0.9986295347545738*yaw_err_cos1+0.01*x_err1)
    m.addConstr(yaw_input1==yaw_err1+10.0*(0.01*y_err1+0.01*yaw_err_sin1))
    m.addConstr(new_v_z1==10.0*-0.052335956242943835+0.01*z_err1)
    m.addGenConstrNorm(new_v1, [new_v_xy1, new_v_z1], 2)
    m.addConstr(a_input1==0.005*(new_v1-v1))
    m.addConstr(pitch_input1==(-0.05235987755982989-pitch1)+0.005*z_err1)
    m.addConstr(cos_yaw_cos_pitch1==cos_yaw1*cos_pitch1)
    m.addConstr(sin_yaw_cos_pitch1==sin_yaw1*cos_pitch1)
    m.addConstr(x2==x1+0.1*v1*cos_yaw_cos_pitch1)
    m.addConstr(y2==y1+0.1*v1*sin_yaw_cos_pitch1)
    m.addConstr(z2==z1+0.1*v1*sin_pitch1)
    m.addConstr(yaw2==yaw1+0.1*yaw_input1)
    m.addConstr(pitch2==pitch1+0.1*pitch_input1)
    m.addConstr(v2==v1+0.1*a_input1)

    # Decalre Variables for step 2
    x_est2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x_est2')
    y_est2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y_est2')
    z_est2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z_est2')
    yaw_est2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_est2')
    pitch_est2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch_est2')

    cos_yaw_cos_pitch2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw_cos_pitch2')
    sin_yaw_cos_pitch2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw_cos_pitch2')
    sin_yaw2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw2')
    cos_yaw2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw2')
    sin_pitch2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_pitch2')
    cos_pitch2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_pitch2')
    sin_yaw_est2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_yaw_est2')
    cos_yaw_est2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_yaw_est2')
    sin_pitch_est2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='sin_pitch_est2')
    cos_pitch_est2 = m.addVar(lb=-1.1, ub=1.1, vtype=GRB.CONTINUOUS, name='cos_pitch_est2')

    x_err2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x_err2')
    y_err2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y_err2')
    z_err2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z_err2')
    yaw_err2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err2')
    new_v_xy2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_vel_xy2')
    new_v_z2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_vel_z2')
    new_v2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='new_v2')
    yaw_err_cos2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err_cos2')
    yaw_err_sin2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_err_sin2')
    a_input2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='a_input2')
    yaw_input2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw_input2')
    pitch_input2 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch_input2')

    x3 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='x3')
    y3 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='y3')
    z3 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='z3')
    yaw3 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='yaw3')
    pitch3 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='pitch3')
    v3 = m.addVar(lb=-float('inf'), vtype=GRB.CONTINUOUS, name='v3')

    # Dynamics for step 2
    m.addConstr(x_est2>=x2-23.339123)
    m.addConstr(x_est2<=x2+23.339123)
    m.addConstr(y_est2>=y2-4.873251)
    m.addConstr(y_est2<=y2+4.873251)
    m.addConstr(z_est2>=z2-2.01548)
    m.addConstr(z_est2<=z2+2.01548)
    m.addConstr(yaw_est2>=yaw2-0.001)
    m.addConstr(yaw_est2<=yaw2+0.001)
    m.addConstr(pitch_est2>=pitch2-0.001)
    m.addConstr(pitch_est2<=pitch2+0.001)
    m.addGenConstrSin(yaw2, sin_yaw2)
    m.addGenConstrCos(yaw2, cos_yaw2)
    m.addGenConstrCos(pitch2, cos_pitch2)
    m.addGenConstrSin(pitch2, sin_pitch2)
    m.addGenConstrSin(yaw_est2, sin_yaw_est2)
    m.addGenConstrCos(yaw_est2, cos_yaw_est2)
    m.addGenConstrSin(pitch_est2, sin_pitch_est2)
    m.addGenConstrCos(pitch_est2, cos_pitch_est2)
    m.addConstr(x_err2==cos_yaw_est2*(-2998.0-x_est2)+sin_yaw_est2*(0.0-y_est2))
    m.addConstr(y_err2==-sin_yaw_est2*(-2998.0-x_est2)+cos_yaw_est2*(0.0-y_est2))
    m.addConstr(z_err2==119.89518444143391-z_est2)
    m.addConstr(yaw_err2==0.0-yaw_est2)
    m.addGenConstrCos(yaw_err2, yaw_err_cos2)
    m.addGenConstrSin(yaw_err2, yaw_err_sin2)
    m.addConstr(new_v_xy2==10.0*0.9986295347545738*yaw_err_cos2+0.01*x_err2)
    m.addConstr(yaw_input2==yaw_err2+10.0*(0.01*y_err2+0.01*yaw_err_sin2))
    m.addConstr(new_v_z2==10.0*-0.052335956242943835+0.01*z_err2)
    m.addGenConstrNorm(new_v2, [new_v_xy2, new_v_z2], 2)
    m.addConstr(a_input2==0.005*(new_v2-v2))
    m.addConstr(pitch_input2==(-0.05235987755982989-pitch2)+0.005*z_err2)
    m.addConstr(cos_yaw_cos_pitch2==cos_yaw2*cos_pitch2)
    m.addConstr(sin_yaw_cos_pitch2==sin_yaw2*cos_pitch2)
    m.addConstr(x3==x2+0.1*v2*cos_yaw_cos_pitch2)
    m.addConstr(y3==y2+0.1*v2*sin_yaw_cos_pitch2)
    m.addConstr(z3==z2+0.1*v2*sin_pitch2)
    m.addConstr(yaw3==yaw2+0.1*yaw_input2)
    m.addConstr(pitch3==pitch2+0.1*pitch_input2)
    m.addConstr(v3==v2+0.1*a_input2)

    # Set objective
    m.setObjective(
        yaw3, GRB.MAXIMIZE
    )

    m.params.NonConvex = 2


    # Optimize model
    m.optimize()

    # print(x.X)
    print('Obj: %g' % m.ObjVal)

    # m.write('model.lp')

except gp.GurobiError as e:
    print('Error code ' + str(e.errno) + ': ' + str(e))

except AttributeError:
    print('Encountered an attribute error')
    